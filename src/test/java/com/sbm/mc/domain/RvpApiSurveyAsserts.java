package com.sbm.mc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RvpApiSurveyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRvpApiSurveyAllPropertiesEquals(RvpApiSurvey expected, RvpApiSurvey actual) {
        assertRvpApiSurveyAutoGeneratedPropertiesEquals(expected, actual);
        assertRvpApiSurveyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRvpApiSurveyAllUpdatablePropertiesEquals(RvpApiSurvey expected, RvpApiSurvey actual) {
        assertRvpApiSurveyUpdatableFieldsEquals(expected, actual);
        assertRvpApiSurveyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRvpApiSurveyAutoGeneratedPropertiesEquals(RvpApiSurvey expected, RvpApiSurvey actual) {
        assertThat(expected)
            .as("Verify RvpApiSurvey auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRvpApiSurveyUpdatableFieldsEquals(RvpApiSurvey expected, RvpApiSurvey actual) {
        assertThat(expected)
            .as("Verify RvpApiSurvey relevant properties")
            .satisfies(
                e -> assertThat(e.getOverallScoreEnabled()).as("check overallScoreEnabled").isEqualTo(actual.getOverallScoreEnabled())
            )
            .satisfies(e -> assertThat(e.getLanguages()).as("check languages").isEqualTo(actual.getLanguages()))
            .satisfies(e -> assertThat(e.getOutOf()).as("check outOf").isEqualTo(actual.getOutOf()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getActive()).as("check active").isEqualTo(actual.getActive()))
            .satisfies(e -> assertThat(e.getPids()).as("check pids").isEqualTo(actual.getPids()))
            .satisfies(e -> assertThat(e.getPrimary()).as("check primary").isEqualTo(actual.getPrimary()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRvpApiSurveyUpdatableRelationshipsEquals(RvpApiSurvey expected, RvpApiSurvey actual) {}
}
